title=pitchers.sorted[i, 1], maxmin=F, axistype=0)
})
lapply(1:4, function(i) {
radarchart(rbind(rep(1,6), rep(0,6), pitchers.sorted[i,-1]), pdensity=c(0, 0, 20),
title=pitchers.sorted[i, 1], maxmin=F, axistype=0)
})
lapply(1:4, function(i) {
radarchart(rbind(rep(1,6), rep(0,6), pitchers.sorted[i,-1]), pdensity=c(0, 0, 10),
title=pitchers.sorted[i, 1], maxmin=F, axistype=0)
})
lapply(1:4, function(i) {
radarchart(rbind(rep(1,6), rep(0,6), pitchers.sorted[i,-1]), pdensity=c(0, 0, 100),
title=pitchers.sorted[i, 1], maxmin=F, axistype=0)
})
lapply(1:4, function(i) {
radarchart(rbind(rep(1,6), rep(0,6), pitchers.sorted[i,-1]), pdensity=c(0, 0, 100),
title=pitchers.sorted[i, 1], maxmin=F, axistype=0, centerzero=T)
})
par(mar=c(0, 0, 0, 0)) #decrease default margin
layout(matrix(1:4, ncol=2)) #draw 4 plots to device
#loop over rows to draw them, add 1 as max and 0 as min for each var
lapply(1:4, function(i) {
radarchart(rbind(rep(1,6), rep(0,6), pitchers.sorted[i,-1]), pdensity=c(0, 0, 100),
title=pitchers.sorted[i, 1], maxmin=F, axistype=0, centerzero=T)
})
par(mar=c(0, 0, 1, 0)) #decrease default margin
layout(matrix(1:4, ncol=2)) #draw 4 plots to device
#loop over rows to draw them, add 1 as max and 0 as min for each var
lapply(1:4, function(i) {
radarchart(rbind(rep(1,6), rep(0,6), pitchers.sorted[i,-1]), pdensity=c(0, 0, 100),
title=pitchers.sorted[i, 1], maxmin=F, axistype=0, centerzero=T)
})
par(mar=c(0, 1, 1, 0)) #decrease default margin
layout(matrix(1:4, ncol=2)) #draw 4 plots to device
#loop over rows to draw them, add 1 as max and 0 as min for each var
lapply(1:4, function(i) {
radarchart(rbind(rep(1,6), rep(0,6), pitchers.sorted[i,-1]), pdensity=c(0, 0, 100),
title=pitchers.sorted[i, 1], maxmin=F, axistype=0, centerzero=T)
})
par(mar=c(0, 1, 1, 0)) #decrease default margin
layout(matrix(1:6, ncol=3)) #draw 4 plots to device
#loop over rows to draw them, add 1 as max and 0 as min for each var
lapply(1:6, function(i) {
radarchart(rbind(rep(1,6), rep(0,6), pitchers.sorted[i,-1]), pdensity=c(0, 0, 100),
title=pitchers.sorted[i, 1], maxmin=F, axistype=0, centerzero=T)
})
par(mfrow=n2mfrow(nrow(pitchers.sorted)), mar=rep(2, 4))
lapply(1:6, function(i) {
radarchart(rbind(rep(1,6), rep(0,6), pitchers.sorted[i,-1]), pdensity=c(0, 0, 100),
title=pitchers.sorted[i, 1], maxmin=F, axistype=0, centerzero=T)
})
par(mfrow=n2mfrow(nrow(pitchers.sorted)), mar=rep(3, 6))
#loop over rows to draw them, add 1 as max and 0 as min for each var
lapply(1:6, function(i) {
radarchart(rbind(rep(1,6), rep(0,6), pitchers.sorted[i,-1]), pdensity=c(0, 0, 100),
title=pitchers.sorted[i, 1], maxmin=F, axistype=0, centerzero=T)
})
par(mar=c(0, 1, 1, 0)) #decrease default margin
layout(matrix(1:6, ncol=3)) #draw 4 plots to device
#par(mfrow=n2mfrow(nrow(pitchers.sorted)), mar=rep(3, 6))
#loop over rows to draw them, add 1 as max and 0 as min for each var
lapply(1:6, function(i) {
radarchart(rbind(rep(1,6), rep(0,6), pitchers.sorted[i,-1]), pdensity=c(0, 0, 100),
title=pitchers.sorted[i, 1], maxmin=F, axistype=0, centerzero=T)
})
pitchers
library(rCharts)
hitters<- read.csv("7312015 modern toolbox.csv", header=T)
hitters<- read.csv("73115 modern toolbox.csv", header=T)
head(hitters)
hitters<- read.csv("hitters.csv", header=T)
head(hitters)
hitters.sorted<-hitters[,c(1,3,5,7,9,11)]
par(mar=c(0, 1, 1, 0)) #decrease default margin
layout(matrix(1:6, ncol=3)) #draw 4 plots to device
lapply(1:6, function(i) {
radarchart(rbind(rep(1,6), rep(0,6), hitters.sorted[i,-1]), pdensity=c(0, 0, 100),
title=hitters.sorted[i, 1], maxmin=F, axistype=0, centerzero=T)
})
library(fmsb)
lapply(1:6, function(i) {
radarchart(rbind(rep(1,6), rep(0,6), hitters.sorted[i,-1]), pdensity=c(0, 0, 100),
title=hitters.sorted[i, 1], maxmin=F, axistype=0, centerzero=T)
})
pitchers<- read.csv("pitchers.csv", header=T)
pitchers
pitchers.sorted<-pitchers[,c(1,3,5,7,9,11,13)]
hamels<-pitchers.sorted[c[31,]]
hamels<-pitchers.sorted[c(31,)]
hamels<-pitchers.sorted[31,]
hamels
radarchart(hamels)
radarchart(hamels, pdensity=c(0,0,100),
title=hamels[1,1], maxmin=F, axistype=0, centerzero=T)
radarchart(hamels[1,-1], pdensity=c(0,0,100),
title=hamels[1,1], maxmin=F, axistype=0, centerzero=T)
hamels
radarchart?
?radarchart
radarchart(hamels, pdensity=c(0,0,100),
title=hamels[1,1], maxmin=F, axistype=0, centerzero=T)
radarchart(hamels[1,-1], pdensity=c(0,0,100),
title=hamels[1,1], maxmin=F, axistype=0, centerzero=T)
pitchers.sorted(1,6)
pitchers.sorted<-pitchers[,c(1,3,5,7,9,11,13)]
pitchers.sorted(1,6)
rep?
?rep
par(mar=c(0, 1, 1, 0)) #decrease default margin
layout(matrix(1:6, ncol=3)) #draw 4 plots to device
#par(mfrow=n2mfrow(nrow(pitchers.sorted))
#mar=rep(3, 6))
#loop over rows to draw them, add 1 as max and 0 as min for each var
lapply(1:6, function(i) {
radarchart(rbind(rep(1,6), rep(0,6), pitchers.sorted[i,-1]), pdensity=c(0, 0, 100),
title=pitchers.sorted[i, 1], maxmin=F, axistype=0, centerzero=T)
})
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), hamels[i,-1]), pdensity=c(0, 0, 100),
title=hamels[i, 1], maxmin=F, axistype=0, centerzero=T)
})
rbind?
?rbind
library(rCharts)
library(fmsb)
#load pitcher data
hitters<- read.csv("hitters.csv", header=T)
#sort pitchers matrix to only include normalized data
hitters.sorted<-hitters[,c(1,3,5,7,9,11)]
hitters.sorted
fielder<-hitters.sorted[13,]
fielder
radarchart(fielder[1,-1], pdensity=c(0,0,100),
title=fielder[1,1], maxmin=F, axistype=0, centerzero=T)
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), fielder[i,-1]), pdensity=c(0, 0, 100),
title=fielder[i, 1], maxmin=F, axistype=0, centerzero=T)
})
pitchers<- read.csv("pitchers.csv", header=T)
#sort pitchers matrix to only include normalized data
pitchers.sorted<-pitchers[,c(1,3,5,7,9,11,13)]
hamels<-pitchers.sorted[31,]
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), hamels[i,-1]), pdensity=c(0, 0, 100),
title=hamels[i, 1], maxmin=F, axistype=0, centerzero=T)
})
hitters.sorted
#for a single hitter
one.hitter<-hitters.sorted[20,]
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), one.hitter[i,-1]), pdensity=c(0, 0, 100),
title=one.hitter[i, 1], maxmin=F, axistype=0, centerzero=T)
})
one.hitter<-hitters.sorted[157,]
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), one.hitter[i,-1]), pdensity=c(0, 0, 100),
title=one.hitter[i, 1], maxmin=F, axistype=0, centerzero=T)
})
#for a single hitter
one.hitter<-hitters.sorted[146,]
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), one.hitter[i,-1]), pdensity=c(0, 0, 100),
title=one.hitter[i, 1], maxmin=F, axistype=0, centerzero=T)
})
library(rCharts)
library(fmsb)
#load pitcher data
hitters<- read.csv("hitters.csv", header=T)
#sort pitchers matrix to only include normalized data
hitters.sorted<-hitters[,c(1,3,5,7,9,11)]
one.hitter<-hitters.sorted[146,]  #different number for each hitter. call hitters.sorted and find
#the hitter you need first
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), one.hitter[i,-1]), pdensity=c(0, 0, 100),
title=one.hitter[i, 1], maxmin=F, axistype=0, centerzero=T)
})
hitters.sorted
one.hitter<-hitters.sorted[88,]  #different number for each hitter. call hitters.sorted and find
#the hitter you need first
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), one.hitter[i,-1]), pdensity=c(0, 0, 100),
title=one.hitter[i, 1], maxmin=F, axistype=0, centerzero=T)
})
one.hitter<-hitters.sorted[133,]  #different number for each hitter. call hitters.sorted and find
#the hitter you need first
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), one.hitter[i,-1]), pdensity=c(0, 0, 100),
title=one.hitter[i, 1], maxmin=F, axistype=0, centerzero=T)
})
one.hitter<-hitters.sorted[113,]  #different number for each hitter. call hitters.sorted and find
one.hitter<-hitters.sorted[113,]  #different number for each hitter. call hitters.sorted and find
#the hitter you need first
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), one.hitter[i,-1]), pdensity=c(0, 0, 100),
title=one.hitter[i, 1], maxmin=F, axistype=0, centerzero=T)
})
library(fmsb)
library(rCharts)
#load pitcher data
pitchers<- read.csv("pitchers.csv", header=T)
#sort pitchers matrix to only include normalized data
pitchers.sorted<-pitchers[,c(1,3,5,7,9,11,13)]
pitchers.sorted
pitch.labels =c("HR/9", 'K%', 'BB%', 'WHIP', 'BABIP', 'FIP')
#for a single pitcher
one.pitcher<-pitchers.sorted[42,]
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), one.pitcher[i,-1]), pdensity=c(0, 0, 100),
title=one.pitcher[i, 1], maxmin=F, axistype=0, centerzero=T, vlabels=pitch.labels)
})
hitters<- read.csv("hitters.csv", header=T)
#sort pitchers matrix to only include normalized data
hitters.sorted<-hitters[,c(1,3,5,7,9,11)]
head(hitters.sorted)
team.offense<- read.csv("teamoffense.csv", header=T)
team.offense.z<-team.offense[,c(1,3,5,7,9,11)]
team.offense
team.offense<- read.csv("teamoffense.csv", header=T)
team.offense
team.offense.z<-team.offense[,c(1,3,5,7,9,11)]
team.offense.z
offense.labels =c('Walk Rate', 'K Rate', 'ISO', 'Speed', "Defense")
#for a single hitter
one.team.offense<-team.offense.z[11,]  #different number for each hitter. call hitters.sorted and find
#the hitter you need first
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), one.team.offense[i,-1]), pdensity=c(0, 0, 100),
title=one.team.offense[i, 1], maxmin=F, axistype=0, centerzero=T, vlabels=offense.labels, vlcex=1)
})
par(mar=c(0, 1, 1, 0)) #decrease default margin
layout(matrix(1:30, ncol=6)) #draw 4 plots to device
lapply(1:30, function(i) {
radarchart(rbind(rep(1,6), rep(0,6), team.offense.z[i,-1]), pdensity=c(0, 0, 100),
title=team.offense.z[i, 1], maxmin=F, axistype=0, centerzero=T, vlabels=offense.labels)
})
library(rCharts)
library(fmsb)
#load team offense data
team.offense<- read.csv("teamoffense.csv", header=T)
#sort pitchers matrix to only include normalized data
team.offense.z<-team.offense[,c(1,3,5,7,9,11)]
team.offense.z
offense.labels =c('Walk Rate', 'K Rate', 'ISO', 'Speed', "Defense")
lapply(1:30, function(i) {
radarchart(rbind(rep(1,6), rep(0,6), team.offense.z[i,-1]), pdensity=c(0, 0, 100),
title=team.offense.z[i, 1], maxmin=F, axistype=0, centerzero=T, vlabels=offense.labels)
})
layout(matrix(1:30, ncol=6)) #draw 4 plots to device
#loop over rows to draw them, add 1 as max and 0 as min for each var
lapply(1:30, function(i) {
radarchart(rbind(rep(1,6), rep(0,6), team.offense.z[i,-1]), pdensity=c(0, 0, 100),
title=team.offense.z[i, 1], maxmin=F, axistype=0, centerzero=T, vlabels=offense.labels)
})
par(mar=c(0, 1, 1, 0)) #decrease default margin
layout(matrix(1:30, ncol=6)) #draw 4 plots to device
#loop over rows to draw them, add 1 as max and 0 as min for each var
lapply(1:30, function(i) {
radarchart(rbind(rep(1,6), rep(0,6), team.offense.z[i,-1]), pdensity=c(0, 0, 100),
title=team.offense.z[i, 1], maxmin=F, axistype=0, centerzero=T, vlabels=offense.labels)
})
one.team.offense<-team.offense.z[11,]  #different number for each hitter. call hitters.sorted and find
#the hitter you need first
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), one.team.offense[i,-1]), pdensity=c(0, 0, 100),
title=one.team.offense[i, 1], maxmin=F, axistype=0, centerzero=T, vlabels=offense.labels, vlcex=1)
})
one.team.offense<-team.offense.z[11,]  #different number for each hitter. call hitters.sorted and find
#the hitter you need first
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), one.team.offense[i,-1]), pdensity=c(0, 0, 100),
title=one.team.offense[i, 1], maxmin=F, axistype=0, centerzero=T, vlabels=offense.labels, vlcex=1)
})
par(mar=c(0, 1, 1, 0)) #decrease default margin
layout(matrix(1:30, ncol=6)) #draw 4 plots to device
#loop over rows to draw them, add 1 as max and 0 as min for each var
lapply(1:30, function(i) {
radarchart(rbind(rep(1,6), rep(0,6), team.offense.z[i,-1]), pdensity=c(0, 0, 100),
title=team.offense.z[i, 1], maxmin=F, axistype=0, centerzero=T, vlabels=offense.labels)
})
hitters<- read.csv("hitters.csv", header=T)
#sort pitchers matrix to only include normalized data
hitters.sorted<-hitters[,c(1,3,5,7,9,11)]
hit.labels =c("Defense", 'Walk Rate', 'K Rate', 'ISO', 'Speed')
#for a single hitter
one.hitter<-hitters.sorted[113,]  #different number for each hitter. call hitters.sorted and find
#the hitter you need first
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), one.hitter[i,-1]), pdensity=c(0, 0, 100),
title=one.hitter[i, 1], maxmin=F, axistype=0, centerzero=T, vlabels=hit.labels, vlcex=1)
})
pitchers<- read.csv("pitchers.csv", header=T)
#sort pitchers matrix to only include normalized data
pitchers.sorted<-pitchers[,c(1,3,5,7,9,11,13)]
pitch.labels =c("HR/9", 'K%', 'BB%', 'WHIP', 'BABIP', 'FIP')
#for a single pitcher
one.pitcher<-pitchers.sorted[42,]
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), one.pitcher[i,-1]), pdensity=c(0, 0, 100),
title=one.pitcher[i, 1], maxmin=F, axistype=0, centerzero=T, vlabels=pitch.labels)
})
team.pitching<- read.csv("teampitching.csv", header=T)
team.pitching.z<-team.pitching[,c(1,3,5,7,9,11,13)]
team.pitching.z
pitch.labels =c("HR/9", 'K%', 'BB%', 'WHIP', 'BABIP', 'FIP')
#for a single pitcher
one.team.pitching<-team.pitching.z[27,]
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), one.team.pitching[i,-1]), pdensity=c(0, 0, 100),
title=one.team.pitching[i, 1], maxmin=F, axistype=0, centerzero=T, vlabels=pitch.labels)
})
library(rCharts)
one.team.pitching<-team.pitching.z[27,]
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), one.team.pitching[i,-1]), pdensity=c(0, 0, 100),
title=one.team.pitching[i, 1], maxmin=F, axistype=0, centerzero=T, vlabels=pitch.labels)
})
library(fmsb)
one.team.pitching<-team.pitching.z[27,]
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), one.team.pitching[i,-1]), pdensity=c(0, 0, 100),
title=one.team.pitching[i, 1], maxmin=F, axistype=0, centerzero=T, vlabels=pitch.labels)
})
#i.e., a low BB% is closer to the edge
par(mar=c(0, 1, 1, 0)) #decrease default margin
layout(matrix(1:30, ncol=6)) #draw 6 plots to device
#par(mfrow=n2mfrow(nrow(pitchers.sorted))
#mar=rep(3, 6))
#loop over rows to draw them, add 1 as max and 0 as min for each var
lapply(1:30, function(i) {
radarchart(rbind(rep(1,6), rep(0,6), team.pitching.z[i,-1]), pdensity=c(0, 0, 100),
title=team.pitching.z[i, 1], maxmin=F, axistype=0, centerzero=T)
})
#i.e., a low BB% is closer to the edge
par(mar=c(0, 1, 1, 0)) #decrease default margin
layout(matrix(1:30, ncol=6)) #draw 6 plots to device
#par(mfrow=n2mfrow(nrow(pitchers.sorted))
#mar=rep(3, 6))
#loop over rows to draw them, add 1 as max and 0 as min for each var
lapply(1:30, function(i) {
radarchart(rbind(rep(1,6), rep(0,6), team.pitching.z[i,-1]), pdensity=c(0, 0, 100),
title=team.pitching.z[i, 1], maxmin=F, axistype=0, centerzero=T, vlabels=pitch.labels)
})
one.team.pitching<-team.pitching.z[1,]
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), one.team.pitching[i,-1]), pdensity=c(0, 0, 100),
title=one.team.pitching[i, 1], maxmin=F, axistype=0, centerzero=T, vlabels=pitch.labels)
})
one.team.pitching<-team.pitching.z[1,]
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), one.team.pitching[i,-1]), pdensity=c(0, 0, 100),
title=one.team.pitching[i, 1], maxmin=F, axistype=0, centerzero=T, vlabels=pitch.labels)
})
par(mar=c(0, 1, 1, 0)) #decrease default margin
layout(matrix(1:30, ncol=6)) #draw 6 plots to device
#par(mfrow=n2mfrow(nrow(pitchers.sorted))
#mar=rep(3, 6))
#loop over rows to draw them, add 1 as max and 0 as min for each var
lapply(1:30, function(i) {
radarchart(rbind(rep(1,6), rep(0,6), team.pitching.z[i,-1]), pdensity=c(0, 0, 100),
title=team.pitching.z[i, 1], maxmin=F, axistype=0, centerzero=T, vlabels=pitch.labels)
})
one.team.pitching<-team.pitching.z[30,]
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), one.team.pitching[i,-1]), pdensity=c(0, 0, 100),
title=one.team.pitching[i, 1], maxmin=F, axistype=0, centerzero=T, vlabels=pitch.labels)
})
team.pitching.z[30,]
install.packages(c("curl", "evaluate", "git2r", "httpuv", "manipulate", "mapproj", "shiny"))
shiny::runApp('~/R work/Shiny tutorial/baseball')
hitters<- read.csv("hitters.csv", header=T)
#sort pitchers matrix to only include normalized data
hitters.sorted<-hitters[,c(1,3,5,7,9,11)]
hitters.sorted
library(XML)
url <- "http://www.fangraphs.com/leaders.aspx?pos=all&stats=bat&lg=all&qual=0&type=c,34,35,199,40,60&season=2015&month=0&season1=&ind=0&team=0,ts&rost=&age=&filter=&players=0"
data <- readHTMLTable(url, stringsAsFactors = FALSE)
data[[1]] # select the first table
head(data)
?readHTMLTable
pitchers<- read.csv("pitchers.csv", header=T)
#sort pitchers matrix to only include normalized data
pitchers.sorted<-pitchers[,c(1,3,5,7,9,11,13)]
head(pitchers.sorted)
pitchers.sorted$Name
choices=c(pitchers.sorted$Name)
choices
choices=pitchers.sorted$Name
choices
pitchers.sorted[1,]
pitchers.sorted[1,1]
pitchers.sorted$Name[1,]
pitchers.sorted$Name(1)
pitch.labels =c("HR/9", 'K%', 'BB%', 'WHIP', 'BABIP', 'FIP')
one.pitcher<-pitchers.sorted[42,]
radarchart(one.pither[1,-1],pdensity=c(0, 0, 100),
title=one.pitcher[i, 1], maxmin=F, axistype=0, centerzero=T, vlabels=pitch.labels)
library(fmsb)
radarchart(one.pither[1,-1],pdensity=c(0, 0, 100),
title=one.pitcher[i, 1], maxmin=F, axistype=0, centerzero=T, vlabels=pitch.labels)
radarchart(one.pitcher[1,-1],pdensity=c(0, 0, 100),
title=one.pitcher[i, 1], maxmin=F, axistype=0, centerzero=T, vlabels=pitch.labels)
radarchart(one.pitcher[1,-1],pdensity=c(0, 0, 100),
title=one.pitcher[-1, 1], maxmin=F, axistype=0, centerzero=T, vlabels=pitch.labels)
radarchart(one.pitcher[1,-1],pdensity=c(0, 0, 100),
title=one.pitcher[1, 1], maxmin=F, axistype=0, centerzero=T, vlabels=pitch.labels)
radarchart(one.pitcher[1,1],pdensity=c(0, 0, 100),
title=one.pitcher[1, 1], maxmin=F, axistype=0, centerzero=T, vlabels=pitch.labels)
one.pitcher
?radarchart
radarchart(one.pitcher, pdensity=c(0, 0, 100),
title=one.pitcher[1, 1], maxmin=F, axistype=0, centerzero=T, vlabels=pitch.labels)
radarchart(one.pitcher, pdensity=c(0, 0, 100),
title=one.pitcher[1, 1], maxmin=F, axistype=0, centerzero=T, vlabels=pitch.labels)
radarchart(rbind(rep(1,1), rep(0,1), one.pitcher[1,-1]), pdensity=c(0, 0, 100),
title=one.pitcher[1, 1], maxmin=F, axistype=0, centerzero=T, vlabels=pitch.labels)
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(shiny)
shiny::runApp()
shiny::runApp('~/R work/Shiny tutorial/baseball')
shiny::runApp()
setwd("~/R work/baseballRadarCharts")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
input$var
shiny::runApp()
pitchers.sorted[1,1]
shiny::runApp()
shiny::runApp()
levels(pitchers.sorted$Name)
shiny::runApp()
shiny::runApp()
shiny::runApp()
?reactive
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
pitchers.sorted
test<-pitchers.sorted$Name("Clayton Kershaw")
test<-subset(pitchers.sorted, pitchers.sorted$Name=="Clayton Kershaw")
test
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
?radarchart
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp('charts v2 dataset choice')
shiny::runApp()
library(XML)
url <- "http://games.espn.go.com/ffl/boxscorefull?leagueId=74920&teamId=5&scoringPeriodId=15&seasonId=2014&view=scoringperiod&version=full"
data <- readHTMLTable(url, stringsAsFactors = FALSE)
data[[1]] # select the first table
data
