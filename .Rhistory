lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), one.team[i,-1]), pdensity=c(0, 0, 100),
title=one.team[i, 1], maxmin=F, axistype=0, centerzero=T, vlabels=offense.labels, vlcex=1)
})
source('~/github/radarcharts/radarCharts/charts v2 dataset choice/ui.R', echo=TRUE)
#ui.R
library(shiny)
shinyUI(fluidPage(
titlePanel("The Modern Toolbox"),
sidebarLayout(
sidebarPanel(
helpText("Create radar charts of baseball players and teams."),
radioButtons("radio", label = h3("Choose your dataset"),
choices = list("Pitchers" = 1, "Hitters" = 2),
selected = 1),
conditionalPanel(condition = "input.radio == '1'",
selectInput("var",
label="Choose a pitcher",
choices=c(levels(pitchers.sorted$Name)),
selected="Pick one"
)
),
conditionalPanel(condition = "input.radio == '2'",
selectInput("var2",
label="Choose a hitter",
choices=c(levels(hitters.sorted$Name)),
selected="Pick one"
))
),
mainPanel(
plotOutput("radar")
)
)
))
#server.R
#server.R
shinyServer(
function(input, output){
observe({
if(input$radio == 1){
one.pitcher = subset(pitchers.sorted, pitchers.sorted$Name==input$var)
output$radar <- renderPlot({
radarchart(rbind(rep(1,1), rep(0,1), one.pitcher[1,-1]), pdensity=c(0, 0, 100),
title=one.pitcher[1, 1], maxmin=F, axistype=0, centerzero=T, vlabels=pitch.labels)
})
}else{
one.hitter = subset(hitters.sorted, hitters.sorted$Name==input$var2)
output$radar <- renderPlot({
radarchart(rbind(rep(1,1), rep(0,1), one.hitter[1,-1]), pdensity=c(0, 0, 100),
title=one.hitter[1, 1], maxmin=F, axistype=0, centerzero=T, vlabels=hit.labels)
})
}
}
)}
)
source('~/github/radarcharts/radarCharts/charts v2 dataset choice/server.R', echo=TRUE)
setwd("~/github/radarcharts/radarCharts/charts v2 dataset choice")
library(shiny)
install.packages(c("data.table", "ICS", "ICSNP", "installr", "manipulate"))
library(shiny)
setwd("~/github/radarcharts/radarCharts/charts v2 dataset choice")
#server.R
shinyServer(
function(input, output){
observe({
if(input$radio == 1){
one.pitcher = subset(pitchers.sorted, pitchers.sorted$Name==input$var)
output$radar <- renderPlot({
radarchart(rbind(rep(1,1), rep(0,1), one.pitcher[1,-1]), pdensity=c(0, 0, 100),
title=one.pitcher[1, 1], maxmin=F, axistype=0, centerzero=T, vlabels=pitch.labels)
})
}else{
one.hitter = subset(hitters.sorted, hitters.sorted$Name==input$var2)
output$radar <- renderPlot({
radarchart(rbind(rep(1,1), rep(0,1), one.hitter[1,-1]), pdensity=c(0, 0, 100),
title=one.hitter[1, 1], maxmin=F, axistype=0, centerzero=T, vlabels=hit.labels)
})
}
}
)}
)
#ui.R
library(shiny)
shinyUI(fluidPage(
titlePanel("The Modern Toolbox"),
sidebarLayout(
sidebarPanel(
helpText("Create radar charts of baseball players and teams."),
radioButtons("radio", label = h3("Choose your dataset"),
choices = list("Pitchers" = 1, "Hitters" = 2),
selected = 1),
conditionalPanel(condition = "input.radio == '1'",
selectInput("var",
label="Choose a pitcher",
choices=c(levels(pitchers.sorted$Name)),
selected="Pick one"
)
),
conditionalPanel(condition = "input.radio == '2'",
selectInput("var2",
label="Choose a hitter",
choices=c(levels(hitters.sorted$Name)),
selected="Pick one"
))
),
mainPanel(
plotOutput("radar")
)
)
))
shiny::runApp('charts v2 dataset choice')
setwd("~/github/radarcharts/radarCharts/charts v3 scrape")
library(XML)
library(httr)
url <- "http://www.fangraphs.com/leaders.aspx?pos=all&stats=pit&lg=all&qual=0&type=c,29,31,44,45,47,34&season=2015&month=13&season1=2015&ind=0&team=0,ts&rost=0&age=0&filter=&players=0"
tables <- readHTMLTable(url)
n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
leaderboard<-data.frame(tables$LeaderBoard1_dg1_ctl00)
#scale data between 0 and 1
scale.normal<-function(m){
(m - min(m))/(max(m)-min(m))
}
#inverse scale data between 0 and 1
scale.inverse<-function(m){
1-((m - min(m))/(max(m)-min(m)))
}
#remove the rankings column at the beginning of the data frame
leaderboard$X. <- NULL
#remove the % from the walk and strikeout columns
leaderboard$BB. <- gsub(" %", "", leaderboard$BB.)
leaderboard$K. <- gsub(" %", "", leaderboard$K.)
#normalize the columns between 0 and 1
leaderboard$WHIP <- scale.normal(as.numeric(leaderboard$WHIP))
leaderboard$BB. <- scale.inverse(as.numeric(leaderboard$BB.))
leaderboard$K. <- scale.normal(as.numeric(leaderboard$K.))
leaderboard$HR/9 <- scale.normal(as.numeric(leaderboard$HR/9))
leaderboard$BABIP <- scale.normal(as.numeric(leaderboard$BABIP))
leaderboard$FIP <- scale.normal(as.numeric(leaderboard$FIP))
library(rCharts)
library(fmsb)
leaderboard
leaderboard$X. <- NULL
#remove the % from the walk and strikeout columns
leaderboard$BB. <- gsub(" %", "", leaderboard$BB.)
leaderboard$K. <- gsub(" %", "", leaderboard$K.)
#normalize the columns between 0 and 1
leaderboard$WHIP <- scale.normal(as.numeric(leaderboard$WHIP))
leaderboard$BB. <- scale.inverse(as.numeric(leaderboard$BB.))
leaderboard$K. <- scale.normal(as.numeric(leaderboard$K.))
leaderboard$HR.9 <- scale.normal(as.numeric(leaderboard$HR.9))
leaderboard$BABIP <- scale.normal(as.numeric(leaderboard$BABIP))
leaderboard$FIP <- scale.normal(as.numeric(leaderboard$FIP))
leaderboard$wOBA <- scale.normal(as.numeric(leaderboard$wOBA))
library(rCharts)
library(fmsb)
one.team<-leaderboard[5,]  #different number for each hitter. call hitters.sorted and find
#provide labels for the radar chart
pitching.labels =c("Walk Rate", 'K Rate', 'OBP', 'ISO', 'Baserunning', 'Defense')
#plot the radar chart for the team's pitching capabilities
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), one.team[i,-1]), pdensity=c(0, 0, 100),
title=expression(paste(one.team[i, 1], "Team Pitching (vs. Righties)")), maxmin=F, axistype=0, centerzero=T, vlabels=pitching.labels, vlcex=1)
})
title=expression(paste(one.team[i, 1], "Team Pitching (vs. Righties)"))
title
expression(one.team[i, 1], " Team Pitching (vs. Righties)")
one.team[i,1]
one.team[1,1]
expression(one.team[1, 1], " Team Pitching (vs. Righties)")
one.team[1,-1]
expression(" Team Pitching (vs. Righties)")
test=expression(" Team Pitching (vs. Righties)")
test
expression(paste("Team Pitching (vs. Righties)"))
test=expression(paste("Team Pitching (vs. Righties)"))
test
obj=list(team=one.team[1,1])
obj$team
bquote(obj$team, " Team Pitching (vs. Righties)")
bquote(obj$team ~ " Team Pitching (vs. Righties)")
paste(one.team[1,1], " Team Pitching (vs. Righties)")
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), one.team[i,-1]), pdensity=c(0, 0, 100),
title=paste(one.team[i, 1], "Team Pitching (vs. Righties)"), maxmin=F, axistype=0, centerzero=T, vlabels=pitching.labels, vlcex=1)
})
leaderboard
pitching.labels =c("HR/9", 'WHIP', 'K%', 'BB%', 'wOBA', 'FIP')
one.team<-leaderboard[23,]  #different number for each hitter. call hitters.sorted and find
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), one.team[i,-1]), pdensity=c(0, 0, 100),
title=paste(one.team[i, 1], "Team Pitching (vs. Righties)"), maxmin=F, axistype=0, centerzero=T, vlabels=pitching.labels, vlcex=1)
})
#Team Pitching Data (vs. Lefties)
library(XML)
library(httr)
#pull the specific data from the url below
url <- "http://www.fangraphs.com/leaders.aspx?pos=all&stats=bat&lg=all&qual=0&type=c,34,35,37,40,111,199&season=2011&month=0&season1=&ind=0&team=0,ts&rost=&age=&filter=&players=0"
tables <- readHTMLTable(url)
n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
leaderboard<-data.frame(tables$LeaderBoard1_dg1_ctl00)
#scale data between 0 and 1
scale.normal<-function(m){
(m - min(m))/(max(m)-min(m))
}
#inverse scale data between 0 and 1
scale.inverse<-function(m){
1-((m - min(m))/(max(m)-min(m)))
}
#remove the rankings column at the beginning of the data frame
leaderboard$X. <- NULL
#remove the % from the walk and strikeout columns
leaderboard$BB. <- gsub(" %", "", leaderboard$BB.)
leaderboard$K. <- gsub(" %", "", leaderboard$K.)
#normalize the columns between 0 and 1
leaderboard$WHIP <- scale.normal(as.numeric(leaderboard$WHIP))
leaderboard$BB. <- scale.inverse(as.numeric(leaderboard$BB.))
leaderboard$K. <- scale.normal(as.numeric(leaderboard$K.))
leaderboard$HR.9 <- scale.normal(as.numeric(leaderboard$HR.9))
leaderboard$BABIP <- scale.normal(as.numeric(leaderboard$BABIP))
leaderboard$FIP <- scale.normal(as.numeric(leaderboard$FIP))
library(rCharts)
library(fmsb)
#pull one team from leaderboard for plotting
one.team<-leaderboard[5,]  #different number for each hitter. call hitters.sorted and find
#provide labels for the radar chart
pitching.labels =c("HR/9", 'WHIP', 'K%', 'BB%', 'wOBA', 'FIP')
#plot the radar chart for the team's pitching capabilities
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), one.team[i,-1]), pdensity=c(0, 0, 100),
title=paste(one.team[i, 1], "Team Pitching (vs. Lefties)"), maxmin=F, axistype=0, centerzero=T, vlabels=pitching.labels, vlcex=1)
})
#Team Pitching Data (vs. Lefties)
library(XML)
library(httr)
#pull the specific data from the url below
url <- "http://www.fangraphs.com/leaders.aspx?pos=all&stats=bat&lg=all&qual=0&type=c,34,35,37,40,111,199&season=2011&month=0&season1=&ind=0&team=0,ts&rost=&age=&filter=&players=0"
tables <- readHTMLTable(url)
n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
leaderboard<-data.frame(tables$LeaderBoard1_dg1_ctl00)
#scale data between 0 and 1
scale.normal<-function(m){
(m - min(m))/(max(m)-min(m))
}
#inverse scale data between 0 and 1
scale.inverse<-function(m){
1-((m - min(m))/(max(m)-min(m)))
}
#remove the rankings column at the beginning of the data frame
leaderboard$X. <- NULL
#remove the % from the walk and strikeout columns
leaderboard$BB. <- gsub(" %", "", leaderboard$BB.)
leaderboard$K. <- gsub(" %", "", leaderboard$K.)
#normalize the columns between 0 and 1
leaderboard$WHIP <- scale.normal(as.numeric(leaderboard$WHIP))
leaderboard$BB. <- scale.inverse(as.numeric(leaderboard$BB.))
leaderboard$K. <- scale.normal(as.numeric(leaderboard$K.))
leaderboard$HR.9 <- scale.normal(as.numeric(leaderboard$HR.9))
leaderboard$BABIP <- scale.normal(as.numeric(leaderboard$BABIP))
leaderboard$FIP <- scale.normal(as.numeric(leaderboard$FIP))
leaderboard
#Team Pitching Data (vs. Lefties)
library(XML)
library(httr)
#pull the specific data from the url below
url <- "http://www.fangraphs.com/leaders.aspx?pos=all&stats=pit&lg=all&qual=0&type=c,29,31,44,45,47,34&season=2015&month=13&season1=2015&ind=0&team=0,ts&rost=0&age=0&filter=&players=0"
tables <- readHTMLTable(url)
n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
leaderboard<-data.frame(tables$LeaderBoard1_dg1_ctl00)
#scale data between 0 and 1
scale.normal<-function(m){
(m - min(m))/(max(m)-min(m))
}
#inverse scale data between 0 and 1
scale.inverse<-function(m){
1-((m - min(m))/(max(m)-min(m)))
}
#remove the rankings column at the beginning of the data frame
leaderboard$X. <- NULL
#remove the % from the walk and strikeout columns
leaderboard$BB. <- gsub(" %", "", leaderboard$BB.)
leaderboard$K. <- gsub(" %", "", leaderboard$K.)
#normalize the columns between 0 and 1
leaderboard$WHIP <- scale.normal(as.numeric(leaderboard$WHIP))
leaderboard$BB. <- scale.inverse(as.numeric(leaderboard$BB.))
leaderboard$K. <- scale.normal(as.numeric(leaderboard$K.))
leaderboard$HR.9 <- scale.normal(as.numeric(leaderboard$HR.9))
leaderboard$BABIP <- scale.normal(as.numeric(leaderboard$BABIP))
leaderboard$FIP <- scale.normal(as.numeric(leaderboard$FIP))
leaderboard$wOBA <- scale.normal(as.numeric(leaderboard$wOBA))
one.team<-leaderboard[5,]  #different number for each hitter. call hitters.sorted and find
#provide labels for the radar chart
pitching.labels =c("HR/9", 'WHIP', 'K%', 'BB%', 'wOBA', 'FIP')
#plot the radar chart for the team's pitching capabilities
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), one.team[i,-1]), pdensity=c(0, 0, 100),
title=paste(one.team[i, 1], "Team Pitching (vs. Lefties)"), maxmin=F, axistype=0, centerzero=T, vlabels=pitching.labels, vlcex=1)
})
leaderboard
one.team<-leaderboard[23,]  #different number for each hitter. call hitters.sorted and find
#provide labels for the radar chart
pitching.labels =c("HR/9", 'WHIP', 'K%', 'BB%', 'wOBA', 'FIP')
#plot the radar chart for the team's pitching capabilities
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), one.team[i,-1]), pdensity=c(0, 0, 100),
title=paste(one.team[i, 1], "Team Pitching (vs. Lefties)"), maxmin=F, axistype=0, centerzero=T, vlabels=pitching.labels, vlcex=1)
})
#Team Pitching Data (vs. Righties)
library(XML)
library(httr)
#pull the specific data from the url below
url <- "http://www.fangraphs.com/leaders.aspx?pos=all&stats=pit&lg=all&qual=0&type=c,29,31,44,45,47,34&season=2015&month=14&season1=2015&ind=0&team=0,ts&rost=0&age=0&filter=&players=0"
tables <- readHTMLTable(url)
n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
leaderboard<-data.frame(tables$LeaderBoard1_dg1_ctl00)
#scale data between 0 and 1
scale.normal<-function(m){
(m - min(m))/(max(m)-min(m))
}
#inverse scale data between 0 and 1
scale.inverse<-function(m){
1-((m - min(m))/(max(m)-min(m)))
}
#remove the rankings column at the beginning of the data frame
leaderboard$X. <- NULL
#remove the % from the walk and strikeout columns
leaderboard$BB. <- gsub(" %", "", leaderboard$BB.)
leaderboard$K. <- gsub(" %", "", leaderboard$K.)
#normalize the columns between 0 and 1
leaderboard$WHIP <- scale.normal(as.numeric(leaderboard$WHIP))
leaderboard$BB. <- scale.inverse(as.numeric(leaderboard$BB.))
leaderboard$K. <- scale.normal(as.numeric(leaderboard$K.))
leaderboard$HR.9 <- scale.normal(as.numeric(leaderboard$HR.9))
leaderboard$wOBA <- scale.normal(as.numeric(leaderboard$wOBA))
leaderboard$FIP <- scale.normal(as.numeric(leaderboard$FIP))
library(rCharts)
library(fmsb)
#pull one team from leaderboard for plotting
one.team<-leaderboard[23,]  #different number for each hitter. call hitters.sorted and find
#provide labels for the radar chart
pitching.labels =c("HR/9", 'WHIP', 'K%', 'BB%', 'wOBA', 'FIP')
#plot the radar chart for the team's pitching capabilities
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), one.team[i,-1]), pdensity=c(0, 0, 100),
title=paste(one.team[i, 1], "Team Pitching (vs. Righties)"), maxmin=F, axistype=0, centerzero=T, vlabels=pitching.labels, vlcex=1)
})
leaderboard
one.team<-leaderboard[22,]  #different number for each hitter. call hitters.sorted and find
#provide labels for the radar chart
pitching.labels =c("HR/9", 'WHIP', 'K%', 'BB%', 'wOBA', 'FIP')
#plot the radar chart for the team's pitching capabilities
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), one.team[i,-1]), pdensity=c(0, 0, 100),
title=paste(one.team[i, 1], "Team Pitching (vs. Righties)"), maxmin=F, axistype=0, centerzero=T, vlabels=pitching.labels, vlcex=1)
})
#Team Pitching Data (Overall)
library(XML)
library(httr)
#pull the specific data from the url below
url <- "http://www.fangraphs.com/leaders.aspx?pos=all&stats=bat&lg=all&qual=0&type=c,34,35,37,40,111,199&season=2011&month=0&season1=&ind=0&team=0,ts&rost=&age=&filter=&players=0"
tables <- readHTMLTable(url)
n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
leaderboard<-data.frame(tables$LeaderBoard1_dg1_ctl00)
#scale data between 0 and 1
scale.normal<-function(m){
(m - min(m))/(max(m)-min(m))
}
#inverse scale data between 0 and 1
scale.inverse<-function(m){
1-((m - min(m))/(max(m)-min(m)))
}
#remove the rankings column at the beginning of the data frame
leaderboard$X. <- NULL
#remove the % from the walk and strikeout columns
leaderboard$BB. <- gsub(" %", "", leaderboard$BB.)
leaderboard$K. <- gsub(" %", "", leaderboard$K.)
#normalize the columns between 0 and 1
leaderboard$WHIP <- scale.normal(as.numeric(leaderboard$WHIP))
leaderboard$BB. <- scale.inverse(as.numeric(leaderboard$BB.))
leaderboard$K. <- scale.normal(as.numeric(leaderboard$K.))
leaderboard$HR/9 <- scale.normal(as.numeric(leaderboard$HR/9))
leaderboard$BABIP <- scale.normal(as.numeric(leaderboard$BABIP))
leaderboard$FIP <- scale.normal(as.numeric(leaderboard$FIP))
library(rCharts)
library(fmsb)
#pull one team from leaderboard for plotting
one.team<-leaderboard[5,]  #different number for each hitter. call hitters.sorted and find
#provide labels for the radar chart
pitching.labels =c("Walk Rate", 'K Rate', 'OBP', 'ISO', 'Baserunning', 'Defense')
#plot the radar chart for the team's pitching capabilities
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), one.team[i,-1]), pdensity=c(0, 0, 100),
title=expression(paste(one.team[i, 1], "Team Pitching (Overall)")), maxmin=F, axistype=0, centerzero=T, vlabels=pitching.labels, vlcex=1)
})
title=paste(one.team[i, 1], "Team Pitching (Overall)"), maxmin=F, axistype=0, centerzero=T, vlabels=pitching.labels, vlcex=1)
#Team Pitching Data (Overall)
library(XML)
library(httr)
#pull the specific data from the url below
url <- "http://www.fangraphs.com/leaders.aspx?pos=all&stats=bat&lg=all&qual=0&type=c,34,35,37,40,111,199&season=2011&month=0&season1=&ind=0&team=0,ts&rost=&age=&filter=&players=0"
tables <- readHTMLTable(url)
n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
leaderboard<-data.frame(tables$LeaderBoard1_dg1_ctl00)
#scale data between 0 and 1
scale.normal<-function(m){
(m - min(m))/(max(m)-min(m))
}
#inverse scale data between 0 and 1
scale.inverse<-function(m){
1-((m - min(m))/(max(m)-min(m)))
}
#remove the rankings column at the beginning of the data frame
leaderboard$X. <- NULL
#remove the % from the walk and strikeout columns
leaderboard$BB. <- gsub(" %", "", leaderboard$BB.)
leaderboard$K. <- gsub(" %", "", leaderboard$K.)
#normalize the columns between 0 and 1
leaderboard$WHIP <- scale.normal(as.numeric(leaderboard$WHIP))
leaderboard$BB. <- scale.inverse(as.numeric(leaderboard$BB.))
leaderboard$K. <- scale.normal(as.numeric(leaderboard$K.))
leaderboard$HR.9 <- scale.normal(as.numeric(leaderboard$HR.9))
leaderboard$wOBA <- scale.normal(as.numeric(leaderboard$wOBA))
leaderboard$FIP <- scale.normal(as.numeric(leaderboard$FIP))
library(rCharts)
library(fmsb)
#pull one team from leaderboard for plotting
one.team<-leaderboard[5,]  #different number for each hitter. call hitters.sorted and find
#provide labels for the radar chart
pitching.labels =c("HR/9", 'WHIP', 'K%', 'BB%', 'wOBA', 'FIP')
#plot the radar chart for the team's pitching capabilities
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), one.team[i,-1]), pdensity=c(0, 0, 100),
title=paste(one.team[i, 1], "Team Pitching (Overall)"), maxmin=F, axistype=0, centerzero=T, vlabels=pitching.labels, vlcex=1)
})
leaderboard
#Team Pitching Data (vs. Lefties)
library(XML)
library(httr)
#pull the specific data from the url below
url <- "http://www.fangraphs.com/leaders.aspx?pos=all&stats=pit&lg=all&qual=0&type=c,29,31,44,45,47,34&season=2015&month=13&season1=2015&ind=0&team=0,ts&rost=0&age=0&filter=&players=0"
tables <- readHTMLTable(url)
n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
leaderboard<-data.frame(tables$LeaderBoard1_dg1_ctl00)
#scale data between 0 and 1
scale.normal<-function(m){
(m - min(m))/(max(m)-min(m))
}
#inverse scale data between 0 and 1
scale.inverse<-function(m){
1-((m - min(m))/(max(m)-min(m)))
}
#remove the rankings column at the beginning of the data frame
leaderboard$X. <- NULL
#remove the % from the walk and strikeout columns
leaderboard$BB. <- gsub(" %", "", leaderboard$BB.)
leaderboard$K. <- gsub(" %", "", leaderboard$K.)
#normalize the columns between 0 and 1
leaderboard$WHIP <- scale.normal(as.numeric(leaderboard$WHIP))
leaderboard$BB. <- scale.inverse(as.numeric(leaderboard$BB.))
leaderboard$K. <- scale.normal(as.numeric(leaderboard$K.))
leaderboard$HR.9 <- scale.normal(as.numeric(leaderboard$HR.9))
leaderboard$wOBA <- scale.normal(as.numeric(leaderboard$wOBA))
leaderboard$FIP <- scale.normal(as.numeric(leaderboard$FIP))
library(rCharts)
library(fmsb)
#pull one team from leaderboard for plotting
one.team<-leaderboard[23,]  #different number for each hitter. call hitters.sorted and find
#provide labels for the radar chart
pitching.labels =c("HR/9", 'WHIP', 'K%', 'BB%', 'wOBA', 'FIP')
#plot the radar chart for the team's pitching capabilities
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), one.team[i,-1]), pdensity=c(0, 0, 100),
title=paste(one.team[i, 1], "Team Pitching (vs. Lefties)"), maxmin=F, axistype=0, centerzero=T, vlabels=pitching.labels, vlcex=1)
})
#Team Pitching Data (vs. Righties)
library(XML)
library(httr)
#pull the specific data from the url below
url <- "http://www.fangraphs.com/leaders.aspx?pos=all&stats=pit&lg=all&qual=0&type=c,29,31,44,45,47,34&season=2015&month=14&season1=2015&ind=0&team=0,ts&rost=0&age=0&filter=&players=0"
tables <- readHTMLTable(url)
n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
leaderboard<-data.frame(tables$LeaderBoard1_dg1_ctl00)
#scale data between 0 and 1
scale.normal<-function(m){
(m - min(m))/(max(m)-min(m))
}
#inverse scale data between 0 and 1
scale.inverse<-function(m){
1-((m - min(m))/(max(m)-min(m)))
}
#remove the rankings column at the beginning of the data frame
leaderboard$X. <- NULL
#remove the % from the walk and strikeout columns
leaderboard$BB. <- gsub(" %", "", leaderboard$BB.)
leaderboard$K. <- gsub(" %", "", leaderboard$K.)
#normalize the columns between 0 and 1
leaderboard$WHIP <- scale.normal(as.numeric(leaderboard$WHIP))
leaderboard$BB. <- scale.inverse(as.numeric(leaderboard$BB.))
leaderboard$K. <- scale.normal(as.numeric(leaderboard$K.))
leaderboard$HR.9 <- scale.normal(as.numeric(leaderboard$HR.9))
leaderboard$wOBA <- scale.normal(as.numeric(leaderboard$wOBA))
leaderboard$FIP <- scale.normal(as.numeric(leaderboard$FIP))
library(rCharts)
library(fmsb)
#pull one team from leaderboard for plotting
one.team<-leaderboard[22,]  #different number for each hitter. call hitters.sorted and find
#provide labels for the radar chart
pitching.labels =c("HR/9", 'WHIP', 'K%', 'BB%', 'wOBA', 'FIP')
#plot the radar chart for the team's pitching capabilities
lapply(1:1, function(i) {
radarchart(rbind(rep(1,1), rep(0,1), one.team[i,-1]), pdensity=c(0, 0, 100),
title=paste(one.team[i, 1], "Team Pitching (vs. Righties)"), maxmin=F, axistype=0, centerzero=T, vlabels=pitching.labels, vlcex=1)
})
